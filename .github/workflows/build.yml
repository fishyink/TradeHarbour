name: Build and Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: mac
            arch: x64
          - os: macos-latest
            platform: mac
            arch: arm64
          - os: windows-latest
            platform: windows
            arch: x64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Vite app
        run: npm run build

      - name: Build Electron app (Mac)
        if: matrix.platform == 'mac'
        run: |
          npm run build:${{ matrix.platform }}
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Build Electron app (Windows)
        if: matrix.platform == 'windows'
        run: npm run build:${{ matrix.platform }}

      - name: Create Mac ZIP (x64)
        if: matrix.platform == 'mac' && matrix.arch == 'x64'
        run: |
          cd dist/mac
          zip -r ../../TradeHarbour-macOS-Intel.zip TradeHarbour.app
          cd ../..

      - name: Create Mac ZIP (arm64)
        if: matrix.platform == 'mac' && matrix.arch == 'arm64'
        run: |
          cd dist/mac-arm64
          zip -r ../../TradeHarbour-macOS-Apple-Silicon.zip TradeHarbour.app
          cd ../..

      - name: Create Windows ZIP
        if: matrix.platform == 'windows'
        run: |
          cd dist
          Compress-Archive -Path "TradeHarbour Setup*.exe" -DestinationPath ../TradeHarbour-Windows.zip
          cd ..
        shell: pwsh

      - name: Upload artifacts (Mac x64)
        if: matrix.platform == 'mac' && matrix.arch == 'x64'
        uses: actions/upload-artifact@v3
        with:
          name: TradeHarbour-macOS-Intel
          path: TradeHarbour-macOS-Intel.zip

      - name: Upload artifacts (Mac arm64)
        if: matrix.platform == 'mac' && matrix.arch == 'arm64'
        uses: actions/upload-artifact@v3
        with:
          name: TradeHarbour-macOS-Apple-Silicon
          path: TradeHarbour-macOS-Apple-Silicon.zip

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v3
        with:
          name: TradeHarbour-Windows
          path: TradeHarbour-Windows.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Display structure
        run: ls -R

      - name: Create Release Notes
        run: |
          echo "# TradeHarbour Desktop - Automated Build" > release-notes.md
          echo "" >> release-notes.md
          echo "## Downloads" >> release-notes.md
          echo "" >> release-notes.md
          echo "- **TradeHarbour-macOS-Intel.zip** - For Intel-based Macs (x64)" >> release-notes.md
          echo "- **TradeHarbour-macOS-Apple-Silicon.zip** - For M1/M2/M3 Macs (arm64)" >> release-notes.md
          echo "- **TradeHarbour-Windows.zip** - For Windows (x64)" >> release-notes.md
          echo "" >> release-notes.md
          echo "## macOS Installation" >> release-notes.md
          echo "1. Download the appropriate ZIP for your Mac" >> release-notes.md
          echo "2. Unzip the file" >> release-notes.md
          echo "3. Drag TradeHarbour.app to your Applications folder" >> release-notes.md
          echo "4. Right-click the app and select 'Open' (first time only)" >> release-notes.md
          echo "5. If you see a 'damaged/corrupt' error, run in Terminal:" >> release-notes.md
          echo "   \`\`\`bash" >> release-notes.md
          echo "   xattr -cr /Applications/TradeHarbour.app" >> release-notes.md
          echo "   \`\`\`" >> release-notes.md
          echo "" >> release-notes.md
          echo "## Windows Installation" >> release-notes.md
          echo "1. Download TradeHarbour-Windows.zip" >> release-notes.md
          echo "2. Extract and run the installer" >> release-notes.md
          echo "" >> release-notes.md
          echo "Built on $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> release-notes.md

      - name: Create/Update Latest Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: Latest Build
          body_path: release-notes.md
          files: |
            TradeHarbour-macOS-Intel/TradeHarbour-macOS-Intel.zip
            TradeHarbour-macOS-Apple-Silicon/TradeHarbour-macOS-Apple-Silicon.zip
            TradeHarbour-Windows/TradeHarbour-Windows.zip
          prerelease: false
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
